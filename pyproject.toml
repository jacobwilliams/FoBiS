[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "FoBiS.py"
version = "3.1.0"
description = "a Fortran Building System for poor men"
readme = "README.md"
license = {text = "GNU General Public License v3 (GPLv3)"}
authors = [
    {name = "Stefano Zaghi", email = "stefano.zaghi@gmail.com"}
]
maintainers = [
    {name = "Stefano Zaghi", email = "stefano.zaghi@gmail.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing",
]
requires-python = ">=3.8"
dependencies = [
    "configparser",
    "colorama; platform_system=='Windows'",
]

[project.optional-dependencies]
preform = ["PreForM.py>=v1.1.1"]
ford = ["FORD>=1.1.0"]
graphviz = ["graphviz>=0.4.2"]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "flake8",
    "black",
    "mypy",
]

[project.urls]
Homepage = "https://github.com/szaghi/FoBiS"
Repository = "https://github.com/szaghi/FoBiS"
Documentation = "https://github.com/szaghi/FoBiS"
"Bug Tracker" = "https://github.com/szaghi/FoBiS/issues"

[project.scripts]
FoBiS = "fobis.fobis:main"

[tool.setuptools]
package-dir = {"" = "src/main/python"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src/main/python"]

# Include additional files in the source distribution
[tool.setuptools.package-data]
"*" = ["*.md"]

# Black code formatter configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=fobis --cov-report=term-missing"

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# flake8 configuration equivalent in ruff
[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.coverage.run]
source = ["src/main/python/fobis"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
